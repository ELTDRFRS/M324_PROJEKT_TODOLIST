# Docker-specific Spring Boot Configuration
# Used when SPRING_PROFILES_ACTIVE=docker

# Server Configuration
server.port=8080
server.servlet.context-path=/api

# MySQL Database Configuration for Docker
spring.datasource.url=jdbc:mysql://mysql:3306/todolist_db?useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.username=todouser
spring.datasource.password=todopass
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,env
management.endpoint.health.show-details=always
management.endpoint.health.probes.enabled=true
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true

# Application Info
info.app.name=M324 Todo List Backend (Docker)
info.app.description=Spring Boot backend running in Docker container
info.app.version=@project.version@
info.app.java.version=@java.version@

# Logging Configuration for Docker
logging.level.root=INFO
logging.level.com.example=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.file.name=/app/logs/application.log
logging.file.max-size=10MB
logging.file.max-history=10

# CORS Configuration
spring.web.cors.allowed-origins=http://localhost:3000,http://frontend:3000
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# JSON Configuration
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=UTC

# Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
