version: '3.8'

# Production Docker Compose Override
# Usage: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up

services:
  # Production Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - LOGGING_LEVEL_ROOT=WARN
      - LOGGING_LEVEL_COM_EXAMPLE=INFO
      - JAVA_OPTS=-Xmx512m -Xms256m
    restart: unless-stopped
    volumes:
      - ./backend/logs:/app/logs
      - ./backend/config:/app/config
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/actuator/health"]
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 60s

  # Production Frontend (Nginx)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    restart: unless-stopped
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro

  # Production MySQL with Optimizations
  mysql:
    environment:
      - MYSQL_INNODB_BUFFER_POOL_SIZE=256M
      - MYSQL_INNODB_LOG_FILE_SIZE=64M
    volumes:
      - mysql_prod_data:/var/lib/mysql
      - ./backend/src/main/resources/sql:/docker-entrypoint-initdb.d
      - ./mysql/conf.d:/etc/mysql/conf.d:ro
    restart: unless-stopped
    ports:
      - "3306:3306"

  # Remove phpMyAdmin in production for security
  phpmyadmin:
    profiles:
      - debug

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: m324-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    networks:
      - m324-network
    restart: unless-stopped

volumes:
  mysql_prod_data:
    driver: local
