version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: m324-mysql-alt
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: todolist
      MYSQL_USER: todouser
      MYSQL_PASSWORD: todopass
    ports:
      - "3307:3306"  # Different port to avoid conflict
    volumes:
      - mysql_data_alt:/var/lib/mysql
      - ./backend/src/main/resources/sql:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    networks:
      - m324-network

  backend:
    build: ./backend
    container_name: m324-backend-alt
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/todolist?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: todouser
      SPRING_DATASOURCE_PASSWORD: todopass
      JAVA_OPTS: "-Xmx512m -Xms256m"
    ports:
      - "8081:8080"  # Different port
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - m324-network

  frontend:
    build:
      context: ./frontend
      target: production  # Use production stage
    container_name: m324-frontend-alt
    environment:
      REACT_APP_BACKEND_URL: http://backend:8080/api
    ports:
      - "3001:3000"  # Different port
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - m324-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: m324-phpmyadmin-alt
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: todouser
      PMA_PASSWORD: todopass
    ports:
      - "8082:80"  # Different port
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - m324-network

volumes:
  mysql_data_alt:

networks:
  m324-network:
    driver: bridge
